(ns wsserver.core
  (:require [clojure.data.json :as json])
  (:gen-class))

(defn timed-ping
  "Time an .isReachable ping to a given domain"
  [domain timeout]
  (let [addr (java.net.InetAddress/getByName domain)
        start (. System (nanoTime))
        result (.isReachable addr timeout)
        total (/ (double (- (. System (nanoTime)) start)) 1000000.0)]
    {:time total
     :result result}))

(defn -main
  "I don't do a whole lot ... yet."
  [& args]
  (println "Hello, World!"))

(def nodes (json/read-json (slurp "nodes.json")))
 
(type nodes)
(:ip (first nodes))
(map :ip nodes)
(timed-ping (:ip (first nodes)) 500)
(doseq [x (map :ip nodes)] (prn (timed-ping x 500)))
(def x (map :ip nodes))
(let [ 